Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> program
Rule 1     program -> function_list
Rule 2     function_list -> function function_list
Rule 3     function_list -> function
Rule 4     function -> FUNCTION IDENTIFIER LPAREN param_list RPAREN LBRACE statement_list RBRACE
Rule 5     param_list -> IDENTIFIER COMMA param_list
Rule 6     param_list -> IDENTIFIER
Rule 7     param_list -> empty
Rule 8     statement_list -> statement statement_list
Rule 9     statement_list -> statement
Rule 10    statement -> RETURN expression SEMICOLON
Rule 11    statement -> IDENTIFIER ASSIGN expression SEMICOLON
Rule 12    expression -> expression PLUS term
Rule 13    expression -> expression MINUS term
Rule 14    expression -> term
Rule 15    term -> term TIMES factor
Rule 16    term -> term DIVIDE factor
Rule 17    term -> factor
Rule 18    factor -> NUMBER
Rule 19    factor -> IDENTIFIER
Rule 20    factor -> LPAREN expression RPAREN
Rule 21    empty -> <empty>

Terminals, with rules where they appear

ASSIGN               : 11
COMMA                : 5
COMMENT              : 
DIVIDE               : 16
FUNCTION             : 4
IDENTIFIER           : 4 5 6 11 19
LBRACE               : 4
LPAREN               : 4 20
MINUS                : 13
NUMBER               : 18
PLUS                 : 12
RBRACE               : 4
RETURN               : 10
RPAREN               : 4 20
SEMICOLON            : 10 11
TIMES                : 15
error                : 

Nonterminals, with rules where they appear

empty                : 7
expression           : 10 11 12 13 20
factor               : 15 16 17
function             : 2 3
function_list        : 1 2
param_list           : 4 5
program              : 0
statement            : 8 9
statement_list       : 4 8
term                 : 12 13 14 15 16

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function_list
    (2) function_list -> . function function_list
    (3) function_list -> . function
    (4) function -> . FUNCTION IDENTIFIER LPAREN param_list RPAREN LBRACE statement_list RBRACE

    FUNCTION        shift and go to state 4

    program                        shift and go to state 1
    function_list                  shift and go to state 2
    function                       shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> function_list .

    $end            reduce using rule 1 (program -> function_list .)


state 3

    (2) function_list -> function . function_list
    (3) function_list -> function .
    (2) function_list -> . function function_list
    (3) function_list -> . function
    (4) function -> . FUNCTION IDENTIFIER LPAREN param_list RPAREN LBRACE statement_list RBRACE

    $end            reduce using rule 3 (function_list -> function .)
    FUNCTION        shift and go to state 4

    function                       shift and go to state 3
    function_list                  shift and go to state 5

state 4

    (4) function -> FUNCTION . IDENTIFIER LPAREN param_list RPAREN LBRACE statement_list RBRACE

    IDENTIFIER      shift and go to state 6


state 5

    (2) function_list -> function function_list .

    $end            reduce using rule 2 (function_list -> function function_list .)


state 6

    (4) function -> FUNCTION IDENTIFIER . LPAREN param_list RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 7


state 7

    (4) function -> FUNCTION IDENTIFIER LPAREN . param_list RPAREN LBRACE statement_list RBRACE
    (5) param_list -> . IDENTIFIER COMMA param_list
    (6) param_list -> . IDENTIFIER
    (7) param_list -> . empty
    (21) empty -> .

    IDENTIFIER      shift and go to state 8
    RPAREN          reduce using rule 21 (empty -> .)

    param_list                     shift and go to state 9
    empty                          shift and go to state 10

state 8

    (5) param_list -> IDENTIFIER . COMMA param_list
    (6) param_list -> IDENTIFIER .

    COMMA           shift and go to state 11
    RPAREN          reduce using rule 6 (param_list -> IDENTIFIER .)


state 9

    (4) function -> FUNCTION IDENTIFIER LPAREN param_list . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 12


state 10

    (7) param_list -> empty .

    RPAREN          reduce using rule 7 (param_list -> empty .)


state 11

    (5) param_list -> IDENTIFIER COMMA . param_list
    (5) param_list -> . IDENTIFIER COMMA param_list
    (6) param_list -> . IDENTIFIER
    (7) param_list -> . empty
    (21) empty -> .

    IDENTIFIER      shift and go to state 8
    RPAREN          reduce using rule 21 (empty -> .)

    param_list                     shift and go to state 13
    empty                          shift and go to state 10

state 12

    (4) function -> FUNCTION IDENTIFIER LPAREN param_list RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 14


state 13

    (5) param_list -> IDENTIFIER COMMA param_list .

    RPAREN          reduce using rule 5 (param_list -> IDENTIFIER COMMA param_list .)


state 14

    (4) function -> FUNCTION IDENTIFIER LPAREN param_list RPAREN LBRACE . statement_list RBRACE
    (8) statement_list -> . statement statement_list
    (9) statement_list -> . statement
    (10) statement -> . RETURN expression SEMICOLON
    (11) statement -> . IDENTIFIER ASSIGN expression SEMICOLON

    RETURN          shift and go to state 18
    IDENTIFIER      shift and go to state 15

    statement_list                 shift and go to state 16
    statement                      shift and go to state 17

state 15

    (11) statement -> IDENTIFIER . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 19


state 16

    (4) function -> FUNCTION IDENTIFIER LPAREN param_list RPAREN LBRACE statement_list . RBRACE

    RBRACE          shift and go to state 20


state 17

    (8) statement_list -> statement . statement_list
    (9) statement_list -> statement .
    (8) statement_list -> . statement statement_list
    (9) statement_list -> . statement
    (10) statement -> . RETURN expression SEMICOLON
    (11) statement -> . IDENTIFIER ASSIGN expression SEMICOLON

    RBRACE          reduce using rule 9 (statement_list -> statement .)
    RETURN          shift and go to state 18
    IDENTIFIER      shift and go to state 15

    statement                      shift and go to state 17
    statement_list                 shift and go to state 21

state 18

    (10) statement -> RETURN . expression SEMICOLON
    (12) expression -> . expression PLUS term
    (13) expression -> . expression MINUS term
    (14) expression -> . term
    (15) term -> . term TIMES factor
    (16) term -> . term DIVIDE factor
    (17) term -> . factor
    (18) factor -> . NUMBER
    (19) factor -> . IDENTIFIER
    (20) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    expression                     shift and go to state 22
    term                           shift and go to state 23
    factor                         shift and go to state 24

state 19

    (11) statement -> IDENTIFIER ASSIGN . expression SEMICOLON
    (12) expression -> . expression PLUS term
    (13) expression -> . expression MINUS term
    (14) expression -> . term
    (15) term -> . term TIMES factor
    (16) term -> . term DIVIDE factor
    (17) term -> . factor
    (18) factor -> . NUMBER
    (19) factor -> . IDENTIFIER
    (20) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    expression                     shift and go to state 28
    term                           shift and go to state 23
    factor                         shift and go to state 24

state 20

    (4) function -> FUNCTION IDENTIFIER LPAREN param_list RPAREN LBRACE statement_list RBRACE .

    FUNCTION        reduce using rule 4 (function -> FUNCTION IDENTIFIER LPAREN param_list RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 4 (function -> FUNCTION IDENTIFIER LPAREN param_list RPAREN LBRACE statement_list RBRACE .)


state 21

    (8) statement_list -> statement statement_list .

    RBRACE          reduce using rule 8 (statement_list -> statement statement_list .)


state 22

    (10) statement -> RETURN expression . SEMICOLON
    (12) expression -> expression . PLUS term
    (13) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 29
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31


state 23

    (14) expression -> term .
    (15) term -> term . TIMES factor
    (16) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 14 (expression -> term .)
    PLUS            reduce using rule 14 (expression -> term .)
    MINUS           reduce using rule 14 (expression -> term .)
    RPAREN          reduce using rule 14 (expression -> term .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33


state 24

    (17) term -> factor .

    TIMES           reduce using rule 17 (term -> factor .)
    DIVIDE          reduce using rule 17 (term -> factor .)
    SEMICOLON       reduce using rule 17 (term -> factor .)
    PLUS            reduce using rule 17 (term -> factor .)
    MINUS           reduce using rule 17 (term -> factor .)
    RPAREN          reduce using rule 17 (term -> factor .)


state 25

    (18) factor -> NUMBER .

    TIMES           reduce using rule 18 (factor -> NUMBER .)
    DIVIDE          reduce using rule 18 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 18 (factor -> NUMBER .)
    PLUS            reduce using rule 18 (factor -> NUMBER .)
    MINUS           reduce using rule 18 (factor -> NUMBER .)
    RPAREN          reduce using rule 18 (factor -> NUMBER .)


state 26

    (19) factor -> IDENTIFIER .

    TIMES           reduce using rule 19 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 19 (factor -> IDENTIFIER .)
    SEMICOLON       reduce using rule 19 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 19 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 19 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 19 (factor -> IDENTIFIER .)


state 27

    (20) factor -> LPAREN . expression RPAREN
    (12) expression -> . expression PLUS term
    (13) expression -> . expression MINUS term
    (14) expression -> . term
    (15) term -> . term TIMES factor
    (16) term -> . term DIVIDE factor
    (17) term -> . factor
    (18) factor -> . NUMBER
    (19) factor -> . IDENTIFIER
    (20) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    expression                     shift and go to state 34
    term                           shift and go to state 23
    factor                         shift and go to state 24

state 28

    (11) statement -> IDENTIFIER ASSIGN expression . SEMICOLON
    (12) expression -> expression . PLUS term
    (13) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 35
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31


state 29

    (10) statement -> RETURN expression SEMICOLON .

    RETURN          reduce using rule 10 (statement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 10 (statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 10 (statement -> RETURN expression SEMICOLON .)


state 30

    (12) expression -> expression PLUS . term
    (15) term -> . term TIMES factor
    (16) term -> . term DIVIDE factor
    (17) term -> . factor
    (18) factor -> . NUMBER
    (19) factor -> . IDENTIFIER
    (20) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    term                           shift and go to state 36
    factor                         shift and go to state 24

state 31

    (13) expression -> expression MINUS . term
    (15) term -> . term TIMES factor
    (16) term -> . term DIVIDE factor
    (17) term -> . factor
    (18) factor -> . NUMBER
    (19) factor -> . IDENTIFIER
    (20) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    term                           shift and go to state 37
    factor                         shift and go to state 24

state 32

    (15) term -> term TIMES . factor
    (18) factor -> . NUMBER
    (19) factor -> . IDENTIFIER
    (20) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    factor                         shift and go to state 38

state 33

    (16) term -> term DIVIDE . factor
    (18) factor -> . NUMBER
    (19) factor -> . IDENTIFIER
    (20) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 25
    IDENTIFIER      shift and go to state 26
    LPAREN          shift and go to state 27

    factor                         shift and go to state 39

state 34

    (20) factor -> LPAREN expression . RPAREN
    (12) expression -> expression . PLUS term
    (13) expression -> expression . MINUS term

    RPAREN          shift and go to state 40
    PLUS            shift and go to state 30
    MINUS           shift and go to state 31


state 35

    (11) statement -> IDENTIFIER ASSIGN expression SEMICOLON .

    RETURN          reduce using rule 11 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 11 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 11 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)


state 36

    (12) expression -> expression PLUS term .
    (15) term -> term . TIMES factor
    (16) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 12 (expression -> expression PLUS term .)
    PLUS            reduce using rule 12 (expression -> expression PLUS term .)
    MINUS           reduce using rule 12 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 12 (expression -> expression PLUS term .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33


state 37

    (13) expression -> expression MINUS term .
    (15) term -> term . TIMES factor
    (16) term -> term . DIVIDE factor

    SEMICOLON       reduce using rule 13 (expression -> expression MINUS term .)
    PLUS            reduce using rule 13 (expression -> expression MINUS term .)
    MINUS           reduce using rule 13 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 13 (expression -> expression MINUS term .)
    TIMES           shift and go to state 32
    DIVIDE          shift and go to state 33


state 38

    (15) term -> term TIMES factor .

    TIMES           reduce using rule 15 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 15 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 15 (term -> term TIMES factor .)
    PLUS            reduce using rule 15 (term -> term TIMES factor .)
    MINUS           reduce using rule 15 (term -> term TIMES factor .)
    RPAREN          reduce using rule 15 (term -> term TIMES factor .)


state 39

    (16) term -> term DIVIDE factor .

    TIMES           reduce using rule 16 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 16 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 16 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 16 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 16 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 16 (term -> term DIVIDE factor .)


state 40

    (20) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 20 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 20 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 20 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 20 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 20 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 20 (factor -> LPAREN expression RPAREN .)

